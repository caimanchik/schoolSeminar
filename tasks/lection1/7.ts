// Используя примитивную типизацию с помощью TypeScript, напишите код, который:

// 1) Принимает число,
// 2) Возвращает его цифровой корень.
// Цифровой корень (также известен как корень по основанию 10) 
// для положительного целого числа определяется как сумма его цифр до тех пор, 
// пока не останется одна цифра.

// Например, для числа 942 цифровой корень вычисляется следующим образом: 
// 9 + 4 + 2 = 15, затем 1 + 5 = 6. Получается, что цифровой корень числа 942 равен 6

// Для зауска тестов npm run 1.7


//! Не меняйте название функции - не пройдете тесты
export function getDigitalRoot(num) {
    // todo
}

//! Вы увидите результат вызова скрипта, когда запустите тесты. 
//! Не меняйте название функции, содержимое в вашем распоряжении
export function demo(): void {
    const num = 942
    console.log(getDigitalRoot(num))   // Должно получиться 6
}




































//? Подсказка
//? Создайте еще одну функцию которая принимает массив чисел и используйте в ней рекурсию